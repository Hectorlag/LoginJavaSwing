
package com.mycompany.mavenproject1.IGU;

import com.mycompany.mavenproject1.logica.Usuario;
import com.mycompany.mavenproject1.logica.controladoraLogica;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class PrincipalAdm extends javax.swing.JFrame {
    
    controladoraLogica control; //VARIABLE GLOBAL
    Usuario usr;//VARIABLE GLOBAL
    
    public PrincipalAdm(controladoraLogica control, Usuario usr) {//PARAM QUE RECIBIMOS PARA PODER USAR LOS METODOS
        initComponents();                            //DE LA CONTROLADORA LOGICA
        this.control= control;
        this.usr=usr;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        btnBorrar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnNuevoUsuario = new javax.swing.JButton();
        btnrecargar = new javax.swing.JButton();
        txtNombreUser = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Sistema Administrador de Usuarios");

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaUsuarios);

        btnBorrar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBorrar.setText("Borrar Usuario");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditar.setText("Editar Usuario");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnNuevoUsuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNuevoUsuario.setText("Crear nuevo Usuario");
        btnNuevoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoUsuarioActionPerformed(evt);
            }
        });

        btnrecargar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnrecargar.setText("Recargar Tabla");
        btnrecargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrecargarActionPerformed(evt);
            }
        });

        txtNombreUser.setEditable(false);
        txtNombreUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNombreUser.setBorder(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnrecargar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNuevoUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtNombreUser, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(txtNombreUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNuevoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnrecargar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.txtNombreUser.setText(usr.getNombreUsuario());
        cargarTabla();
    }//GEN-LAST:event_formWindowOpened

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed
                                

        private void cargarTabla() {
       DefaultTableModel modeloTabla = new DefaultTableModel(){
           
           //QUE FILAS Y COLUMNAS NO SEAN EDITABLES
           @Override
           public boolean isCellEditable(int row, int column){
            return false;
           }
    };
       //ESTABLECEMOS LOS NOMBRES DE LAS COLUMNAS
         String titulos[] = {"Id", "Usuario", "Rol"};
         modeloTabla.setColumnIdentifiers(titulos);//ESTABLECEMOS LOS TITULOS AL ENCABEZADO DE LA TABLA
         
         tablaUsuarios.setModel(modeloTabla);//ASIGNAMOS LOS TITULOS AL MODELO DE LA TABLA
         
         //TRAEMOS DESDE BASE DE DATOS LA LISTA DE USUARIOS
         List<Usuario> listaUsuarios = control.traerUsuarios();
         
         if(listaUsuarios != null){
         
                //RECORREMOS LA LISTA DE USUARIOS CON UN FOREACH
            for(Usuario usu: listaUsuarios){
               Object objeto [] = {usu.getId(), usu.getNombreUsuario(), usu.getUnRol().getNombreRol()};
             
               //POR CADA FILA QUE ENCUENTRO DATOS, AGREGO EL OBEJETO AL MODELO DE LA TABLA
               modeloTabla.addRow(objeto);          
            } 
         }
      tablaUsuarios.setModel(modeloTabla);
     }
    
    
    private void btnrecargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrecargarActionPerformed
          cargarTabla();
        
    }//GEN-LAST:event_btnrecargarActionPerformed

    private void btnNuevoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoUsuarioActionPerformed
        
        AltasUsuarios altaUsu = new AltasUsuarios(control);
        altaUsu.setVisible(true);
        altaUsu.setLocationRelativeTo(null);
        //this.dispose();
    }//GEN-LAST:event_btnNuevoUsuarioActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
       
        //VALIDAR QUE LA TABLA TENGA ELEMENTOS
        if(tablaUsuarios.getRowCount() > 0){
            //CONTROLAR QUE HALLA SELECCIONADO UN ELEMENTO
            if(tablaUsuarios.getSelectedRow() != -1){//-1 PORQUE LOS ELEMENTOS, TABLAS O ARRAY COMIENZAN EN CERO          
     
            //OBTENGO LA ID DEL ELEMENTO A ELIMINAR
    //OBTENGO EL ID DE LA FILA SELECCIONADA COMUNA CERO, LUEGO LO PASRSEO PORQUE DEVUELVE UN OBJETO, 1RO A STRING Y 2DO A ENTERO
    int id_usuario = Integer.parseInt(String.valueOf(tablaUsuarios.getValueAt(tablaUsuarios.getSelectedRow(), 0)));
                 
            //LLAMO AL METODO ELIMINAR
            control.borrarUsuario(id_usuario);
            
            //AVISAR AL USUARIO QUE SE BORRÓ CORRECTAMENTE
            mostrarMensaje("Se borró correctamente", "Info", "Elimnación Coorrecta");
            
            //SE CARGA LA TABLA NUEVAMENTE
            cargarTabla();
            }
            else{
                mostrarMensaje("No se seleccionó ningun registro", "Error", "Error al borrar");
            }
            
        }
        else{
            mostrarMensaje("La tabla esta vacía", "Error", "Error al borrar");
        }
            
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
          
            //VALIDAR QUE LA TABLA TENGA ELEMENTOS
        if(tablaUsuarios.getRowCount() > 0){
            //CONTROLAR QUE HALLA SELECCIONADO UN ELEMENTO
            if(tablaUsuarios.getSelectedRow() != -1){//-1 PORQUE LOS ELEMENTOS, TABLAS O ARRAY COMIENZAN EN CERO          
     
            //OBTENGO LA ID DEL ELEMENTO A ELIMINAR
    //OBTENGO EL ID DE LA FILA SELECCIONADA COMUNA CERO, LUEGO LO PASRSEO PORQUE DEVUELVE UN OBJETO, 1RO A STRING Y 2DO A ENTERO
    int id_usuario = Integer.parseInt(String.valueOf(tablaUsuarios.getValueAt(tablaUsuarios.getSelectedRow(), 0)));
                 
            //LLAMO A LA VENTANA DE EDICIÓN
            edicionUsuarios pantallaEdic = new edicionUsuarios(control, id_usuario);
            pantallaEdic.setVisible(true);
            pantallaEdic.setLocationRelativeTo(null);
            }
               else{
                  mostrarMensaje("No se seleccionó ningun registro", "Error", "Error al editar");
               }
           
         }
          else{
            mostrarMensaje("La tabla esta vacía", "Error", "Error al editar");
          }
        
    }//GEN-LAST:event_btnEditarActionPerformed

      public void mostrarMensaje(String mensaje, String tipo, String titulo){
      JOptionPane optionPane = new JOptionPane(mensaje);
      if(tipo.equals("Info")){
        optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
      }
      else if(tipo.equals("Error")){
         optionPane.setMessageType(JOptionPane.ERROR_MESSAGE);
      }
      JDialog dialog = optionPane.createDialog(titulo);
      dialog.setAlwaysOnTop(true);
      dialog.setVisible(true);
    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNuevoUsuario;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnrecargar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtNombreUser;
    // End of variables declaration//GEN-END:variables
}
